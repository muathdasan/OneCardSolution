@model SmartMvc.Core.Domain.Terminal

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="col-md-12">
    <div class="form-manage">
        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "CreateForm" }))
        {
            @Html.AntiForgeryToken()
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">
                    <span class="fa fa-edit"></span> @String.Format("{0}", Resources.Site.Edit)
                    :  @Html.DisplayFor(model => model.TermTitle)
                </h3>
            </div>
            <div class="panel-body">
                <div class="">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.Partial("~/Views/Shared/_MessageResult.cshtml", ViewData)
                    @Html.HiddenFor(model => model.TermId)

                    <div class="form-group">
                        @Html.LabelFor(model => model.TermCode, htmlAttributes: new { @class = "control-label " })

                        @Html.EditorFor(model => model.TermCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TermCode, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TermTitle, htmlAttributes: new { @class = "control-label " })

                        @Html.EditorFor(model => model.TermTitle, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TermTitle, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TermDescription, htmlAttributes: new { @class = "control-label " })

                        @Html.EditorFor(model => model.TermDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TermDescription, "", new { @class = "text-danger" })

                    </div>

                    @*<div class="form-group">
            @Html.LabelFor(model => model.TermAddDate, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TermAddDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TermAddDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

                    @*<div class="form-group">
            @Html.LabelFor(model => model.TermModifyDate, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TermModifyDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TermModifyDate, "", new { @class = "text-danger" })
            </div>
        </div>*@

                    @*<div class="form-group">
            @Html.LabelFor(model => model.TermUserId, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TermUserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TermUserId, "", new { @class = "text-danger" })
            </div>
        </div>*@

                    @*<div class="form-group">
            @Html.LabelFor(model => model.TermModifyUserId, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TermModifyUserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TermModifyUserId, "", new { @class = "text-danger" })
            </div>
        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.TermPriority, htmlAttributes: new { @class = "control-label " })

                        @Html.EditorFor(model => model.TermPriority, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TermPriority, "", new { @class = "text-danger" })

                    </div>

                    @*<div class="form-group">
            @Html.LabelFor(model => model.TermIsDeleted, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.TermIsDeleted)
                    @Html.ValidationMessageFor(model => model.TermIsDeleted, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

                    @*<div class="form-group">
            @Html.LabelFor(model => model.TermIsPublished, htmlAttributes: new { @class = "control-label " })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.TermIsPublished)
                    @Html.ValidationMessageFor(model => model.TermIsPublished, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value='@Resources.Site.Save' class="btn btn-info" />
                            @Html.ActionLink(Resources.Site.BackToList, "Index", null, new { @class = "btn btn-default" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
        }
     </div>
</div>
@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}

